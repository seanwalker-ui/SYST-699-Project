import pygame
import csv
import time

# Window dimensions
WINDOW_WIDTH = 1280
WINDOW_HEIGHT = 980

# Colors
BACKGROUND_COLOR = (255, 255, 255)  # White background
DRONE_COLOR = (0, 0, 255)  # Blue drones

# Function to map the world position (x, y) to screen coordinates
def map_position_to_screen(x, y, world_size):
    """
    Maps the drone's (x, y) position from world coordinates to screen coordinates.
    """
    # Scaling world coordinates to fit within the screen
    scale_x = WINDOW_WIDTH / world_size
    scale_y = WINDOW_HEIGHT / world_size

    # Map the position
    screen_x = int(x * scale_x)
    screen_y = int(y * scale_y)
    return screen_x, screen_y

# Function to draw the drones on the pygame window
def draw_drones(screen, drone_positions, world_size):
    """
    Draw the drones on the pygame window.
    """
    screen.fill(BACKGROUND_COLOR)  # Clear the screen

    # Draw each drone
    for pos in drone_positions:
        x, y = pos
        screen_x, screen_y = map_position_to_screen(x, y, world_size)
        pygame.draw.circle(screen, DRONE_COLOR, (screen_x, screen_y), 5)

    pygame.display.flip()  # Update the display

# Function to visualize drone movements using pygame
def visualize_drones(csv_path, world_size):
    """
    Visualizes drone positions by reading the CSV file generated by run_multiagent_trpo.py.
    """
    pygame.init()
    screen = pygame.display.set_mode((WINDOW_WIDTH, WINDOW_HEIGHT))
    pygame.display.set_caption("Drone Swarm Visualization")

    running = True
    clock = pygame.time.Clock()

    # Open the CSV file to read the drone positions
    with open(csv_path, mode='r') as file:
        reader = csv.reader(file)
        header = next(reader)  # Skip header row

        # Read drone positions from the CSV and update visualization
        while running:
            # Read each row in the CSV file (droneID, x, y, velocity_x, velocity_y, acceleration, orientation)
            drone_positions = []
            for row in reader:
                drone_id, x, y, vx, vy, accel, orientation = row
                drone_positions.append((float(x), float(y)))

            # Draw the drones on the screen
            draw_drones(screen, drone_positions, world_size)

            # Check for quit events (close window)
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    running = False

            # Control the frame rate (e.g., 10 FPS)
            clock.tick(10)

            # Simulate real-time visualization (assuming the CSV is updated)
            time.sleep(0.1)

    pygame.quit()

if __name__ == '__main__':
    # Path to the CSV file generated by run_multiagent_trpo.py
    csv_path = 'C:\\Users\\sawal\\Documents\\VS_Code\\Output\\testlog.csv'
    
    # Assume world size is 100x100 (can adjust based on your environment settings)
    world_size = 100
    
    visualize_drones(csv_path, world_size)